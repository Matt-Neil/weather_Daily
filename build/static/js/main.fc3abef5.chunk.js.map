{"version":3,"sources":["contexts/unitContext.js","components/nav.jsx","components/fetchWeather.js","contexts/mainContext.js","contexts/favouriteContext.js","components/mainInfo.jsx","contexts/recentContext.js","components/searchBox.jsx","components/recent.jsx","components/cardFavourite.jsx","components/favourite.jsx","components/cardToday.jsx","components/today.jsx","components/cardWeek.jsx","components/week.jsx","contexts/updateContext.js","components/midSectionLower.jsx","App.js","reportWebVitals.js","index.js"],"names":["UnitContext","createContext","UnitContextProvider","props","useState","localData","localStorage","getItem","unit","setUnit","useEffect","setItem","Provider","value","changeUnit","children","Nav","useContext","date","Date","className","Switch","style","color","onChange","Intl","DateTimeFormat","weekday","year","month","day","format","getCode","require","fetchWeather","queryCity","queryCountry","a","axios","get","params","q","units","APPID","process","latlon","city","data","name","country","sys","coord","lat","lon","toLowerCase","city_name","console","log","country_code","MainContext","MainContextProvider","first","setFirst","current","week","today","main","setMain","tempMain","JSON","parse","updateMain","then","catch","e","stringify","tempTime","hourly","dt","toLocaleString","hour","daily","length","shift","changeMain","changeFirst","FavouriteContext","FavouriteContextProvider","favourite","setFavourite","updateFavourite","tempFavourite","location","push","addFavourite","filter","match","removeFavourite","ThemeButton","withStyles","root","width","height","boxShadow","textTransform","fontSize","padding","fontWeight","fontFamily","borderRadius","backgroundColor","marginTop","marginRight","marginLeft","Button","MainInfo","getName","weather","wind","setWind","setCountry","temp","setTemp","full","setFull","Math","ceil","wind_speed","round","toString","div","initial","opacity","scale","animate","transition","duration","delay","src","icon","alt","whileHover","startIcon","onClick","humidity","RecentContext","RecentContextProvider","recent","setRecent","addRecent","removeRecent","SearchBox","setQueryCity","setQueryCountry","searchType","key","searchButton","display","alignItems","placeholder","target","onKeyPress","Recent","empty","setEmpty","map","change","i","p","Result","CardFavourite","Favourite","CardToday","time","setTime","pointerEvents","Today","CardWeek","setDate","tempDate","Week","UpdateContext","UpdateContextProvider","timeoutID","useRef","timer","setTimer","setTimeout","prev","clearTimeout","clearInterval","Toggle","border","ToggleButton","MidSectionLower","displayToday","setDisplayToday","displayWeek","setDisplayWeek","displayFavourite","setDisplayFavourite","option","setOption","ToggleButtonGroup","event","newOption","exclusive","aria-label","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc3abef5.chunk.js","sourcesContent":["import React, {createContext, useEffect, useState} from 'react'\n\nexport const UnitContext = createContext(\"Metric\")\n\nconst UnitContextProvider = (props) => {\n    const [unit, setUnit] = useState(() => {\n        const localData = localStorage.getItem('unit');\n        return localData ? localData : \"Metric\"\n    })\n    const changeUnit = (unit) => {\n        setUnit(unit)\n    }\n\n    useEffect(() => {\n        localStorage.setItem('unit', unit)\n    }, [unit])\n\n    return (\n        <UnitContext.Provider value={{unit, changeUnit}}>\n            {props.children}\n        </UnitContext.Provider>\n    )\n}\n\nexport default UnitContextProvider","import React, {useContext} from \"react\";\nimport Switch from '@material-ui/core/Switch';\nimport {UnitContext} from \"../contexts/unitContext\";\n\nconst Nav = () => {\n    const { unit, changeUnit } = useContext(UnitContext)\n    const date = new Date()\n    const options = { weekday: \"long\", year: \"numeric\", month: \"long\", day: \"numeric\"}\n\n    const handleUnit = () => {\n        if (unit === \"Metric\") {\n            changeUnit(\"Imperial\")\n        } else {\n            changeUnit(\"Metric\")\n        }\n    }\n\n    return (\n        <div className={\"navBar\"}>\n            <div className={\"navUpper\"}>\n                <h1 className={\"title titleLarge titleSmall\"}>weatherDaily</h1>\n                <div className={\"navTemp navTempSmall navTempLarge\"}>\n                    <Switch style={{ color: \"white\" }} color={\"default\"} onChange={handleUnit} />\n                    <p className={\"switch switchLarge switchSmall\"}>{unit}</p>\n                </div>\n            </div>\n            <p className={\"date dateLarge dateSmall\"}>{new Intl.DateTimeFormat(\"en-GB\", options).format(date)}</p>\n        </div>\n    )\n}\n\nexport default Nav","import axios from \"axios\";\nconst { getCode } = require('country-list');\n\nexport const fetchWeather = async (queryCity, queryCountry) => {\n    if (queryCountry === \"\") {\n        const latlon = await axios.get(\"https://api.openweathermap.org/data/2.5/weather\", {\n            params: {\n                q: queryCity,\n                units: 'metric',\n                APPID: process.env.REACT_APP_API_KEY_OPENWEATHER\n            }\n        })\n        const city = latlon.data.name\n        const country = latlon.data.sys.country\n        const data = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${latlon.data.coord.lat}&lon=${latlon.data.coord.lon}&units=metric&exclude=minutely,alerts&appid=${process.env.REACT_APP_API_KEY_OPENWEATHER}`)\n        return {data, city, country}\n    } else {\n        if ((queryCountry).toLowerCase() === \"united kingdom\" || (queryCountry).toLowerCase() === \"great britain\"\n            || (queryCountry).toLowerCase() === \"england\" || (queryCountry).toLowerCase() === \"scotland\" ||\n            (queryCountry).toLowerCase() === \"wales\" || (queryCountry).toLowerCase() === \"northern ireland\"\n            || (queryCountry).toLowerCase() === \"uk\" || (queryCountry).toLowerCase() === \"britain\"\n            || (queryCountry).toLowerCase() === \"gb\" || (queryCountry).toLowerCase() === \"scottish highlands\"\n            || (queryCountry).toLowerCase() === \"channel islands\" || (queryCountry).toLowerCase() === \"isle of man\"\n            || (queryCountry).toLowerCase() === \"isle of white\" || (queryCountry).toLowerCase() === \"britain\"\n            || (queryCountry).toLowerCase() === \"isles of scilly\") {\n            queryCountry = getCode(\"United Kingdom of Great Britain and Northern Ireland\")\n        } else if ((queryCountry).toLowerCase() === \"united states\" || (queryCountry).toLowerCase() === \"us\"\n            || (queryCountry).toLowerCase() === \"the united states of america\" || (queryCountry).toLowerCase() === \"usa\"\n            || (queryCountry).toLowerCase() === \"america\") {\n            queryCountry = getCode(\"United States of America\")\n        } else {\n            queryCountry = getCode(queryCountry)\n        }\n        const latlon = await axios.get(`https://api.weatherbit.io/v2.0/current?city=${queryCity}&country=${queryCountry}&key=${process.env.REACT_APP_API_KEY_WEATHERBIT}`)\n        let city\n        if (latlon.data.data[0].city_name === \"City of London\") {\n            city = \"London\"\n        } else {\n            city = latlon.data.data[0].city_name\n        }\n        console.log(city)\n        const country = latlon.data.data[0].country_code\n        const data = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${latlon.data.data[0].lat}&lon=${latlon.data.data[0].lon}&units=metric&exclude=minutely,alerts&appid=${process.env.REACT_APP_API_KEY_OPENWEATHER}`)\n        return {data, city, country}\n    }\n}","import React, {createContext, useEffect, useState} from 'react'\nimport {fetchWeather} from \"../components/fetchWeather\";\n\nexport const MainContext = createContext({})\n\nconst MainContextProvider = (props) => {\n    const [first, setFirst] = useState(false)\n    const [main, setMain] = useState\n    ({\n        city: \"\",\n        country: \"\",\n        current: [],\n        week: [],\n        today: []\n    })\n\n    useEffect(() => {\n        const localData = localStorage.getItem('main')\n        if (localData) {\n            const tempMain = JSON.parse(localData)\n            updateMain(tempMain.city, tempMain.country).then(() => console.log(\"Updated Main\")).catch(e => console.log(e))\n        }\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem('main', JSON.stringify(main))\n    }, [main])\n\n    const updateMain = async (city, country) => {\n        const data = await fetchWeather(city, country)\n        let tempTime = new Date(data.data.data.hourly[0].dt*1000).toLocaleString(\"en-GB\", {hour: \"numeric\"})\n        if (data.data.data.daily.length > 7) {\n            data.data.data.daily.length = 8\n            data.data.data.daily.shift()\n        }\n        data.data.data.hourly.length = (24-tempTime)\n        data.data.data.hourly.shift()\n        setMain({\n            city: city,\n            country: country,\n            current: data.data.data.current,\n            week: data.data.data.daily,\n            today: data.data.data.hourly\n        })\n        setFirst(true)\n    }\n    const changeMain = (city, country, current, week, today) => {\n        let tempTime = new Date(today[0].dt*1000).toLocaleString(\"en-GB\", {hour: \"numeric\"})\n        if (week.length > 7) {\n            week.length = 8\n            week.shift()\n        }\n        today.length = (24-tempTime)\n        today.shift()\n        setMain({\n            city: city,\n            country: country,\n            current: current,\n            week: week,\n            today: today\n        })\n    }\n    const changeFirst = () => {\n        setFirst(true)\n    }\n\n    return (\n        <MainContext.Provider value={{main, first, updateMain, changeMain, changeFirst}}>\n            {props.children}\n        </MainContext.Provider>\n    )\n}\n\nexport default MainContextProvider","import React, {createContext, useEffect, useState} from 'react'\nimport {fetchWeather} from \"../components/fetchWeather\";\n\nexport const FavouriteContext = createContext([])\n\nconst FavouriteContextProvider = (props) => {\n    const [favourite, setFavourite] = useState([])\n    const updateFavourite = async (favourite) => {\n        let tempFavourite = []\n        for (const location of favourite) {\n            const data = await fetchWeather(location.city, location.country)\n            tempFavourite.push({\n                city: location.city,\n                country: location.country,\n                current: data.data.data.current\n            })\n        }\n        setFavourite(tempFavourite)\n    }\n\n    useEffect(() => {\n        const localData = localStorage.getItem('favourite');\n        if (localData) {\n            updateFavourite(JSON.parse(localData)).then(() => console.log(\"Updated Favourites\")).catch(e => console.log(e))\n        }\n    },[])\n\n    useEffect(() => {\n        localStorage.setItem('favourite', JSON.stringify(favourite))\n    }, [favourite])\n\n    const addFavourite = (city, country, current) => {\n        if (favourite.length < 7) {\n            if (favourite.filter(location => location.city.match(city)).length === 0) {\n                setFavourite([{\n                    city: city,\n                    country: country,\n                    current: current\n                }, ...favourite])\n            }\n        }\n    }\n    const removeFavourite = (city) => {\n        setFavourite(favourite.filter(location => location.city !== city))\n    }\n\n    return (\n        <FavouriteContext.Provider value={{favourite, updateFavourite, addFavourite, removeFavourite}}>\n            {props.children}\n        </FavouriteContext.Provider>\n    )\n}\n\nexport default FavouriteContextProvider","import React, {useContext, useEffect, useState} from \"react\";\nimport {MainContext} from \"../contexts/mainContext\";\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {UnitContext} from \"../contexts/unitContext\";\nimport {FavouriteContext} from \"../contexts/favouriteContext\";\nimport {motion} from \"framer-motion\";\n\nconst ThemeButton = withStyles({\n    root: {\n        width: 120,\n        height: 35,\n        boxShadow: 'none',\n        textTransform: 'none',\n        fontSize: 16,\n        padding: '6px 12px',\n        fontWeight: 400,\n        fontFamily: '\"Quicksand\", sans-serif',\n        borderRadius: 10,\n        color: 'white',\n        backgroundColor: \"#F66A3A\",\n        marginTop: 20,\n        marginRight: 20,\n        marginLeft: 20,\n        '&:hover': {\n            backgroundColor: '#F66A3A',\n            color: 'white',\n        },\n    },\n})(Button);\n\nconst MainInfo = () => {\n    const { getName } = require('country-list');\n    const weather = useContext(MainContext)\n    const { first } = useContext(MainContext)\n    const { unit } = useContext(UnitContext)\n    const { favourite, addFavourite } = useContext(FavouriteContext)\n    const [wind, setWind] = useState(\"\")\n    const [country, setCountry] = useState(\"\")\n    const [temp, setTemp] = useState(0)\n    const [full, setFull] = useState(false)\n\n    useEffect(() => {\n        if (unit === \"Metric\") {\n            setWind(Math.ceil(weather.main.current.wind_speed) + \"kph\")\n            setTemp(Math.ceil(weather.main.current.temp))\n        } else {\n            setWind(Math.round(1.60934*Math.ceil(weather.main.current.wind_speed)).toString() + \"mph\")\n            setTemp(Math.round(Math.ceil(weather.main.current.temp)*1.8)+32)\n        }\n        if (weather.main.country === \"GB\") {\n            setCountry(\"United Kingdom\")\n        } else {\n            setCountry(getName(weather.main.country))\n        }\n        if (favourite.length >= 7) {\n            setFull(true)\n        } else {\n            setFull(false)\n        }\n    }, [unit, weather, favourite])\n\n    const add = (location) => {\n        addFavourite(location.city, location.country, location.current, location.week, location.today)\n    }\n\n    return (\n        <motion.div className={\"mainInfo mainInfoVerySmall mainInfoSmall mainInfoMedium mainInfoLarge\"}\n                    initial={{ opacity: 1, scale: 0.95 }}\n                    animate={{ scale: 1 }}\n                    transition={{ duration: 0.3, delay: 0.15 }}\n                    key={weather.main.city}>\n            {first &&\n                <>\n                    <div className={\"mainInfoUpper mainInfoUpperSmall\"}>\n                        <div className={\"mainInfoLocation\"}>\n                            <p className={\"mainInfoCity\"}>{weather.main.city}</p>\n                            <p className={\"mainInfoCountry\"}>{country}</p>\n                        </div>\n                        <img src={`https://openweathermap.org/img/wn/${weather.main.current.weather[0].icon}@2x.png`}\n                             alt={\"Weather Icon\"} />\n                        { full ?\n                            <div>\n                                <ThemeButton>Full</ThemeButton>\n                            </div>\n                            :\n                            <motion.div whileHover={{ scale: 1.02 }}>\n                                <ThemeButton startIcon={<AddIcon style={{ color: \"white\" }} />}\n                                             onClick={() => {add(weather.main)}}>Favourite</ThemeButton>\n                            </motion.div>\n                        }\n                    </div>\n                    <p className={\"mainTime mainTimeLarge mainTimeSmall\"}>Now -</p>\n                    <div className={\"mainInfoLower mainInfoLowerSmall\"}>\n                        <p className={\"currentTemperature currentTemperatureSmall currentTemperatureMedium currentTemperatureLarge\"}>{temp}°</p>\n                        <div>\n                            <p className={\"currentWeather currentWeatherSmall currentWeatherLarge\"}>{weather.main.current.weather[0].main}</p>\n                            <div className={\"mainInfoLowerExtra mainInfoLowerExtraSmall\"}>\n                                <p className={\"currentWind currentWindVerySmall currentWindSmall currentWindMedium currentWindLarge\"}>Wind | {wind}</p>\n                                <p className={\"currentHumidity currentHumiditySmall currentHumidityMedium currentHumidityLarge\"}>Humidity | {weather.main.current.humidity}%</p>\n                            </div>\n                        </div>\n                    </div>\n                </>}\n        </motion.div>\n    )\n}\n\nexport default MainInfo","import React, {createContext, useEffect, useState} from 'react'\n\nexport const RecentContext = createContext([])\n\nconst RecentContextProvider = (props) => {\n    const [recent, setRecent] = useState(() => {\n        const localData = localStorage.getItem('recent');\n        return localData ? JSON.parse(localData) : []\n    })\n\n    useEffect(() => {\n        localStorage.setItem('recent', JSON.stringify(recent))\n    }, [recent])\n\n    const addRecent = (city, country) => {\n        if (recent.filter(location => location.city.match(city)).length === 0) {\n            if (recent.length === 4) {\n                recent.length = 3\n            }\n            setRecent([{\n                city: city,\n                country: country\n            }, ...recent])\n        } else {\n            setRecent([{\n                city: city,\n                country: country\n            }, ...recent.filter(location => location.city !== city)])\n        }\n    }\n    const removeRecent = (city) => {\n        setRecent(recent.filter(location => location.city !== city))\n    }\n\n    return (\n        <RecentContext.Provider value={{recent, addRecent, removeRecent}}>\n            {props.children}\n        </RecentContext.Provider>\n    )\n}\n\nexport default RecentContextProvider","import React, {useContext, useState} from \"react\";\nimport {fetchWeather} from \"./fetchWeather\"\nimport {MainContext} from \"../contexts/mainContext\";\nimport {RecentContext} from \"../contexts/recentContext\";\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst SearchBox = () => {\n    const [queryCity, setQueryCity] = useState(\"\")\n    const [queryCountry, setQueryCountry] = useState(\"\")\n    const { changeMain, changeFirst } = useContext(MainContext)\n    const { addRecent } = useContext(RecentContext)\n\n    const searchType = async (e) => {\n        if (e.key === \"Enter\") {\n            console.log(\"hi\")\n            const data = await fetchWeather(queryCity, queryCountry)\n            changeMain(data.city, data.country, data.data.data.current, data.data.data.daily, data.data.data.hourly)\n            changeFirst(true)\n            addRecent(data.city, data.country)\n            setQueryCity(\"\")\n            setQueryCountry(\"\")\n        }\n    }\n\n    const searchButton = async () => {\n        const data = await fetchWeather(queryCity, queryCountry)\n        changeMain(data.city, data.country, data.data.data.current, data.data.data.daily, data.data.data.hourly)\n        changeFirst(true)\n        addRecent(data.city, data.country)\n        setQueryCity(\"\")\n        setQueryCountry(\"\")\n    }\n\n    return (\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <input placeholder={\"City\"}\n                   className={\"searchBox searchBoxCity searchBoxSmall searchBoxLarge\"}\n                   value={queryCity}\n                   onChange={(e) => setQueryCity(e.target.value)}\n                   onKeyPress={searchType}\n            />\n            <input placeholder={\"Country\"}\n                   className={\"searchBox searchBoxCountry searchBoxSmall searchBoxLarge\"}\n                   value={queryCountry}\n                   onChange={(e) => setQueryCountry(e.target.value)}\n                   onKeyPress={searchType}\n            />\n            <SearchIcon onClick={searchButton} className={\"searchIcon\"} style={{ fontSize: 24 }} />\n        </div>\n    )\n}\n\nexport default SearchBox","import React, {useContext, useEffect, useState} from \"react\";\nimport {RecentContext} from \"../contexts/recentContext\";\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport {MainContext} from \"../contexts/mainContext\";\nimport {motion} from \"framer-motion\";\nimport {fetchWeather} from \"./fetchWeather\";\n\nconst Recent = () => {\n    const { getName } = require('country-list');\n    const { recent, removeRecent } = useContext(RecentContext)\n    const [country, setCountry] = useState([])\n    const { changeMain } = useContext(MainContext)\n    const [empty, setEmpty] = useState(true)\n\n    useEffect(() => {\n        let temp = []\n        { recent.map((location) => {\n            if (location.country === \"GB\") {\n                return temp.push(\"United Kingdom\")\n            } else {\n                return temp.push(getName(location.country))\n            }\n        })}\n        setCountry(temp)\n    }, [recent])\n\n    useEffect(() => {\n        if (recent.length === 0) {\n            setEmpty(true)\n        } else {\n            setEmpty(false)\n        }\n    }, [recent])\n\n    const remove = (city) => {\n        removeRecent(city)\n    }\n\n    const change = async (location) => {\n        const data = await fetchWeather(location.city, location.country)\n        changeMain(location.city, location.country, data.data.data.current, data.data.data.daily, data.data.data.hourly)\n    }\n\n    return (\n        <>\n            { empty ?\n                <div className={\"recentBox recentBoxLarge recentBoxSmall\"}>\n                    <p className={\"placeholder\"} style={{ marginLeft: 20, marginTop: 20 }}>Recent searches...</p>\n                </div>\n                :\n                <div className={\"recentBox recentBoxLarge recentBoxSmall\"}>\n                    { recent.map((location, i) => {\n                        return (\n                            <div className={\"recentRow\"} key={i}>\n                                <RemoveCircleOutlineIcon className={\"recentRemove\"}\n                                                         style={{ color: \"#646464\" }}\n                                                         onClick={() => {remove(location.city)}}\n                                />\n                                <motion.p className={\"recentText\"}\n                                          whileHover={{ scale: 1.01 }}\n                                          onClick={() => {change(location).then((Result) => {\n                                              console.log(\"Updated Main\")\n                                          }).catch(e => console.log(e))}}>{location.city} - {country[i]}</motion.p>\n                            </div>\n                        )\n                    })}\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Recent","import React, {useContext, useEffect, useState} from \"react\";\nimport {UnitContext} from \"../contexts/unitContext\";\nimport {MainContext} from \"../contexts/mainContext\";\nimport {motion} from \"framer-motion\";\nimport {fetchWeather} from \"./fetchWeather\";\n\nconst CardFavourite = ({weather}) => {\n    const [temp, setTemp] = useState(0)\n    const [country, setCountry] = useState(\"\")\n    const { unit } = useContext(UnitContext)\n    const { changeMain } = useContext(MainContext)\n\n    useEffect(() => {\n        if (unit === \"Metric\") {\n            setTemp(Math.ceil(weather.current.temp))\n        } else {\n            setTemp(Math.round(Math.ceil(weather.current.temp)*1.8)+32)\n        }\n        if (weather.country === \"GB\") {\n            setCountry(\"UK\")\n        } else {\n            setCountry(weather.country)\n        }\n    }, [unit, weather])\n\n    const change = async () => {\n        const data = await fetchWeather(weather.city, weather.country)\n        changeMain(weather.city, weather.country, data.data.data.current, data.data.data.daily, data.data.data.hourly)\n    }\n\n    return (\n        <>\n            <motion.div className={\"card cardLarge cardSmall\"}\n                        whileHover={{ scale: 1.01 }}\n                        onClick={() => {change().then((Result) => {\n                            console.log(\"Updated Main\")\n                        }).catch(e => console.log(e))}}>\n                <p className={\"cardCity\"}>{weather.city}</p>\n                <p className={\"cardCountry cardCountryLarge cardCountrySmall\"}>{country}</p>\n                <img className={\"weatherIcon\"} src={`https://openweathermap.org/img/wn/${weather.current.weather[0].icon}@2x.png`} alt={\"Weather Icon\"} />\n                <p className={\"cardWeather\"}>{weather.current.weather[0].main}</p>\n                <p className={\"cardTemperature cardTemperatureSmall cardTemperatureMedium cardTemperatureLarge\"}>{temp}°</p>\n            </motion.div>\n        </>\n    )\n}\n\nexport default CardFavourite","import CardFavourite from \"./cardFavourite\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {FavouriteContext} from \"../contexts/favouriteContext\";\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport { motion } from \"framer-motion\"\n\nconst Favourite = () => {\n    const { favourite, removeFavourite } = useContext(FavouriteContext)\n    const [empty, setEmpty] = useState(true)\n\n    useEffect(() => {\n        if (favourite.length === 0) {\n            setEmpty(true)\n        } else {\n            setEmpty(false)\n        }\n    }, [favourite])\n\n    const remove = (city) => {\n        removeFavourite(city)\n    }\n\n    return (\n        <>\n            { empty ?\n                <p className={\"placeholder\"}>Currently no favourites...</p>\n                :\n                <div className={\"cardsContainer\"}>\n                    { favourite.map((location, i) => {\n                        return (\n                            <motion.div className={\"cardContainer cardContainerSmall cardContainerMedium\"}\n                                        key={i}\n                                        initial={{ opacity: 0, scale: 0.8 }}\n                                        animate={{ opacity: 1, scale: 1 }}\n                                        transition={{ duration: 0.2, delay: 0.15*(i*0.5) }}>\n                                <CardFavourite weather={location} />\n                                <RemoveCircleOutlineIcon className={\"favouriteRemove\"}\n                                                         style={{ color: \"#646464\" }}\n                                                         onClick={() => {remove(location.city)}}\n                                />\n                            </motion.div>\n                        )\n                    })}\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Favourite","import React, {useContext, useEffect, useState} from \"react\";\nimport {UnitContext} from \"../contexts/unitContext\";\n\nconst CardToday = ({weather}) => {\n    const [temp, setTemp] = useState(0)\n    const [time, setTime] = useState(\"\")\n    const { unit } = useContext(UnitContext)\n\n    useEffect(() => {\n        if (unit === \"Metric\") {\n            setTemp(Math.ceil(weather.temp))\n        } else {\n            setTemp(Math.round(Math.ceil(weather.temp)*1.8)+32)\n        }\n        let tempTime = new Date(weather.dt*1000).toLocaleString(\"en-GB\", {hour: \"numeric\"})\n        setTime(tempTime)\n    }, [unit, weather])\n\n    return (\n        <div className={\"card cardLarge cardSmall\"} style={{ pointerEvents: \"none\" }}>\n            <p className={\"cardDate\"}>{time}:00</p>\n            <img className={\"weatherIcon\"} src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={\"Weather Icon\"} />\n            <p className={\"cardWeather\"}>{weather.weather[0].main}</p>\n            <p className={\"cardTemperature cardTemperatureSmall cardTemperatureMedium cardTemperatureLarge\"}>{temp}°</p>\n        </div>\n    )\n}\n\nexport default CardToday","import CardToday from \"./cardToday\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {MainContext} from \"../contexts/mainContext\";\nimport {motion} from \"framer-motion\";\n\nconst Today = () => {\n    const main = useContext(MainContext)\n    const [empty, setEmpty] = useState(true)\n\n    useEffect(() => {\n        if (main.main.today.length === 0 && main.main.city === \"\") {\n            setEmpty(true)\n        } else {\n            setEmpty(false)\n        }\n    }, [main.main.today])\n\n    return (\n        <>\n            { empty ?\n                <p className={\"placeholder\"}>No location chosen...</p>\n                :\n                <div className={\"cardsContainer\"}>\n                    { main.main.today.map((location, i) => {\n                        return (\n                            <motion.div className={\"cardContainer cardContainerSmall cardContainerMedium\"}\n                                        key={i}\n                                        initial={{ opacity: 0, scale: 0.8 }}\n                                        animate={{ opacity: 1, scale: 1 }}\n                                        transition={{ duration: 0.2, delay: 0.15*(i*0.5) }}>\n                                <CardToday weather={location} />\n                            </motion.div>\n                        )\n                    })}\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Today","import React, {useContext, useEffect, useState} from \"react\";\nimport {UnitContext} from \"../contexts/unitContext\";\n\nconst CardWeek = ({weather}) => {\n    const [temp, setTemp] = useState(0)\n    const [date, setDate] = useState(\"\")\n    const { unit } = useContext(UnitContext)\n\n    useEffect(() => {\n        if (unit === \"Metric\") {\n            setTemp(Math.ceil(weather.temp.day))\n        } else {\n            setTemp(Math.round(Math.ceil(weather.temp.day)*1.8)+32)\n        }\n        let tempDate = new Date(weather.dt*1000).toLocaleString(\"en-GB\", {weekday: \"short\", day: \"numeric\"})\n        setDate(tempDate)\n    }, [unit, weather])\n\n    return (\n        <div className={\"card cardLarge cardSmall\"} style={{ pointerEvents: \"none\" }}>\n            <p className={\"cardDate\"}>{date}</p>\n            <img className={\"weatherIcon\"} src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={\"Weather Icon\"} />\n            <p className={\"cardWeather\"}>{weather.weather[0].main}</p>\n            <p className={\"cardTemperature cardTemperatureSmall cardTemperatureMedium cardTemperatureLarge\"}>{temp}°</p>\n        </div>\n    )\n}\n\nexport default CardWeek","import React, {useContext, useEffect, useState} from \"react\";\nimport {MainContext} from \"../contexts/mainContext\";\nimport CardWeek from \"./cardWeek\";\nimport CardToday from \"./cardToday\";\nimport {motion} from \"framer-motion\";\n\nconst Week = () => {\n    const main = useContext(MainContext)\n    const [empty, setEmpty] = useState(true)\n\n    useEffect(() => {\n        if (main.main.week.length === 0) {\n            setEmpty(true)\n        } else {\n            setEmpty(false)\n        }\n    }, [main.main.week])\n\n    return (\n        <>\n            { empty ?\n                <p className={\"placeholder\"}>No location chosen...</p>\n                :\n                <div className={\"cardsContainer\"}>\n                    { main.main.week.map((location, i) => {\n                        console.log(location)\n                        return (\n                            <motion.div className={\"cardContainer cardContainerSmall cardContainerMedium\"}\n                                        key={i}\n                                        initial={{ opacity: 0, scale: 0.8 }}\n                                        animate={{ opacity: 1, scale: 1 }}\n                                        transition={{ duration: 0.2, delay: 0.15*(i*0.5) }}>\n                                <CardWeek weather={location} />\n                            </motion.div>\n                        )\n                    })}\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Week","import React, {createContext, useContext, useEffect, useRef, useState} from 'react'\nimport {MainContext} from \"./mainContext\";\n\nexport const UpdateContext = createContext(0)\n\nconst UpdateContextProvider = (props) => {\n    const {main} = useContext(MainContext)\n    const timeoutID = useRef(0)\n    const [timer, setTimer] = useState(0)\n\n    useEffect(() => {\n        if (main.city !== \"\") {\n            timeoutID.current = setTimeout(() => {\n                setTimer(prev => prev + 1)\n            }, 60000)\n            return () => {clearTimeout(timeoutID.current)}\n        }\n    })\n\n    useEffect(() => {\n        setTimer(0)\n        clearInterval(timeoutID.current)\n    }, [main])\n\n    return (\n        <UpdateContext.Provider value={{timer}}>\n            {props.children}\n        </UpdateContext.Provider>\n    )\n}\n\nexport default UpdateContextProvider","import Favourite from \"./favourite\";\nimport React, {useContext, useState} from \"react\";\nimport {FavouriteContext} from \"../contexts/favouriteContext\";\nimport Today from \"./today\";\nimport Week from \"./week\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {MainContext} from \"../contexts/mainContext\";\nimport {UpdateContext} from \"../contexts/updateContext\";\n\nconst Toggle = withStyles({\n    root: {\n        height: 30,\n        fontFamily: '\"Quicksand\", sans-serif',\n        border: \"1px #c2c2c2 solid\"\n    },\n})(ToggleButton);\n\nconst MidSectionLower = () => {\n    const {favourite, updateFavourite} = useContext(FavouriteContext)\n    const {main, updateMain} = useContext(MainContext)\n    const {timer} = useContext(UpdateContext)\n    const [displayToday, setDisplayToday] = useState(true)\n    const [displayWeek, setDisplayWeek] = useState(false)\n    const [displayFavourite, setDisplayFavourite] = useState(false)\n    const [option, setOption] = useState('left');\n\n    const today = () => {\n        setDisplayToday(true)\n        setDisplayWeek(false)\n        setDisplayFavourite(false)\n    }\n\n    const week = () => {\n        setDisplayToday(false)\n        setDisplayWeek(true)\n        setDisplayFavourite(false)\n    }\n\n    const favourites = () => {\n        setDisplayToday(false)\n        setDisplayWeek(false)\n        setDisplayFavourite(true)\n    }\n\n    const handleOption = (event, newOption) => {\n        setOption(newOption);\n    };\n\n    const refresh = () => {\n        updateMain(main.city, main.country)\n        updateFavourite(favourite)\n    }\n\n    return (\n        <>\n            <div className={\"midSectionLower\"}>\n                <ToggleButtonGroup className={\"navLower\"}\n                                   value={option}\n                                   onChange={handleOption}\n                                   exclusive>\n                    <Toggle className={\"toggleSmall\"} value=\"left\" aria-label=\"left aligned\" style={{ borderRadius: \"15px 0 0 15px\" }}>\n                        <p className={\"lowerText\"} onClick={() => {today()}}>Today</p>\n                    </Toggle>\n                    <Toggle className={\"toggleSmall\"} value=\"center\" aria-label=\"centered\">\n                        <p className={\"lowerText\"} onClick={() => {week()}}>Week</p>\n                    </Toggle>\n                    <Toggle className={\"toggleBig\"} value=\"right\" aria-label=\"right aligned\" style={{ borderRadius: \"0 15px 15px 0\" }}>\n                        <p className={\"lowerText\"} onClick={() => {favourites()}}>Favourites</p>\n                    </Toggle>\n                </ToggleButtonGroup>\n                <div className={\"displayCards\"}>\n                    { displayToday && <Today /> }\n                    { displayWeek && <Week /> }\n                    { displayFavourite && <Favourite /> }\n                </div>\n                <div className={\"optionExtra\"}>\n                    <p className={\"updated\"}>Last updated {timer} minute(s) ago</p>\n                    <RefreshIcon className={\"updateButton\"} onClick={() => {refresh()}} />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default MidSectionLower","import './App.css';\nimport React from \"react\";\nimport Nav from \"./components/nav\";\nimport MainInfo from \"./components/mainInfo\";\nimport SearchBox from \"./components/searchBox\";\nimport MainContextProvider from \"./contexts/mainContext\";\nimport RecentContextProvider from \"./contexts/recentContext\";\nimport UnitContextProvider from \"./contexts/unitContext\";\nimport Recent from \"./components/recent\";\nimport FavouriteContextProvider from \"./contexts/favouriteContext\";\nimport MidSectionLower from \"./components/midSectionLower\";\nimport UpdateContextProvider from \"./contexts/updateContext\";\n\nfunction App() {\n    return (\n          <MainContextProvider>\n              <RecentContextProvider>\n                  <UnitContextProvider>\n                      <FavouriteContextProvider>\n                          <div className={\"mainPage mainPageSmall mainPageLarge\"}>\n                              <div className={\"midSection midSectionSmall midSectionLarge\"}>\n                                  <Nav />\n                                  <div className={\"midSectionUpper\"}>\n                                      <MainInfo />\n                                      <div className={\"searchBoxContainer searchBoxContainerSmall searchBoxContainerMedium searchBoxContainerLarge\"}>\n                                          <SearchBox />\n                                          <Recent />\n                                      </div>\n                                  </div>\n                                  <UpdateContextProvider>\n                                    <MidSectionLower />\n                                  </UpdateContextProvider>\n                              </div>\n                          </div>\n                      </FavouriteContextProvider>\n                  </UnitContextProvider>\n              </RecentContextProvider>\n          </MainContextProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}